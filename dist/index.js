"use strict";var c=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var R=Object.getOwnPropertyNames;var h=Object.prototype.hasOwnProperty;var w=(e,r)=>{for(var t in r)c(e,t,{get:r[t],enumerable:!0})},A=(e,r,t,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let a of R(r))!h.call(e,a)&&a!==t&&c(e,a,{get:()=>r[a],enumerable:!(o=O(r,a))||o.enumerable});return e};var G=e=>A(c({},"__esModule",{value:!0}),e);var B={};w(B,{useMutationManager:()=>_,useStateManager:()=>I});module.exports=G(B);var U=require("react-query");var p=require("react"),y=(e,r)=>{e.removeQueries(r)},Q=e=>{e.removeQueries()},f=e=>{let r=(0,p.useCallback)(o=>y(e,o),[y]),t=(0,p.useCallback)(()=>Q(e),[Q]);return{remove:r,removeAll:t}};var v=require("react"),d=(e,r,t)=>e.setQueryData(r,t),D=e=>({set:(0,v.useCallback)((t,o)=>d(e,t,o),[d])});var C=require("react"),S=(e,r)=>e.getQueryData(r),x=e=>({get:(0,C.useCallback)(t=>S(e,t),[S])});var T=require("react"),l=require("react-query");var k=(e,r,t,o)=>{let a=t||(0,l.useQueryClient)(),{data:s,isFetching:i,isFetched:m,isError:n,isSuccess:u,status:H,error:b}=(0,l.useQuery)(e,r,o),F=(0,T.useCallback)(()=>{y(a,e)},[y,t]);return{data:s,isFetching:i,isFetched:m,isError:n,isSuccess:u,status:H,error:b,cleanUp:F}},K=e=>({use:(0,T.useCallback)((t,o,a)=>k(t,o,e,a),[k,e])});var E=require("react"),g=(e,r)=>e.invalidateQueries(r),V=e=>({invalidate:(0,E.useCallback)(t=>g(e,t),[g])});var I=()=>{let e=(0,U.useQueryClient)(),{remove:r,removeAll:t}=f(e),{set:o}=D(e),{get:a}=x(e),{invalidate:s}=V(e),{use:i}=K(e);return{__client__:e,get:a,set:o,invalidate:s,remove:r,removeAll:t,use:i}};var M=require("react"),P=require("react-query"),_=(e,r)=>{let{mutateAsync:t,isError:o,isSuccess:a,isLoading:s,status:i}=(0,P.useMutation)(n=>e(n)),m=(0,M.useCallback)(async n=>{try{r?.onBefore&&await r.onBefore(n);let u=await t(n);return r?.onSuccess&&await r.onSuccess(n,u),u}catch(u){throw r?.onError&&r.onError(u),u}finally{r?.onFinally&&r.onFinally()}},[r]);return{mutateAsync:t,routine:m,isError:o,isSuccess:a,isLoading:s,status:i}};
