"use strict";var c=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var w=Object.prototype.hasOwnProperty;var A=(t,e)=>{for(var r in e)c(t,r,{get:e[r],enumerable:!0})},I=(t,e,r,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of h(e))!w.call(t,n)&&n!==r&&c(t,n,{get:()=>e[n],enumerable:!(a=O(e,n))||a.enumerable});return t};var G=t=>I(c({},"__esModule",{value:!0}),t);var p=(t,e,r)=>new Promise((a,n)=>{var i=o=>{try{l(r.next(o))}catch(u){n(u)}},s=o=>{try{l(r.throw(o))}catch(u){n(u)}},l=o=>o.done?a(o.value):Promise.resolve(o.value).then(i,s);l((r=r.apply(t,e)).next())});var W={};A(W,{useMutationManager:()=>B,useStateManager:()=>_});module.exports=G(W);var P=require("react-query");var f=require("react"),y=(t,e)=>{t.removeQueries(e)},d=t=>{t.removeQueries()},v=t=>{let e=(0,f.useCallback)(a=>y(t,a),[y]),r=(0,f.useCallback)(()=>d(t),[d]);return{remove:e,removeAll:r}};var S=require("react"),D=(t,e,r)=>t.setQueryData(e,r),T=t=>({set:(0,S.useCallback)((r,a)=>D(t,r,a),[D])});var C=require("react"),x=(t,e)=>t.getQueryData(e),k=t=>({get:(0,C.useCallback)(r=>x(t,r),[x])});var Q=require("react"),m=require("react-query");var K=(t,e,r)=>{let a=(0,m.useQueryClient)(),{data:n,isFetching:i,isFetched:s,isError:l,isIdle:o,isSuccess:u,status:b,error:E}=(0,m.useQuery)(t,e,r),F=(0,Q.useCallback)(()=>{y(a,t)},[y,a]);return{data:n,isFetching:i,isFetched:s,isError:l,isIdle:o,isSuccess:u,status:b,error:E,cleanUp:F}},g=()=>({use:(0,Q.useCallback)((e,r,a)=>K(e,r,a),[K])});var U=require("react"),V=(t,e)=>t.invalidateQueries(e),M=t=>({invalidate:(0,U.useCallback)(r=>V(t,r),[V])});var _=()=>{let t=(0,P.useQueryClient)(),{remove:e,removeAll:r}=v(t),{set:a}=T(t),{get:n}=k(t),{invalidate:i}=M(t),{use:s}=g();return{__client__:t,get:n,set:a,invalidate:i,remove:e,removeAll:r,use:s}};var H=require("react"),R=require("react-query");var B=(t,e)=>{let{mutateAsync:r,isError:a,isSuccess:n,isLoading:i,status:s}=(0,R.useMutation)(o=>t(o)),l=(0,H.useCallback)(o=>p(void 0,null,function*(){try{e!=null&&e.onBefore&&(yield e.onBefore(o));let u=yield r(o);return e!=null&&e.onSuccess&&(yield e.onSuccess(o,u)),u}catch(u){throw e!=null&&e.onError&&e.onError(u),u}finally{e!=null&&e.onFinally&&e.onFinally()}}),[e]);return{mutateAsync:r,routine:l,isError:a,isSuccess:n,isLoading:i,status:s}};
