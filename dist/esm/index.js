import{useQueryClient as R}from"@tanstack/react-query";import{useCallback as m}from"react";var l=(t,e)=>{t.removeQueries(e)},c=t=>{t.removeQueries()},p=t=>{let e=m(a=>l(t,a),[l]),r=m(()=>c(t),[c]);return{remove:e,removeAll:r}};import{useCallback as V}from"react";var Q=(t,e,r)=>t.setQueryData(e,r),f=t=>({set:V((r,a)=>Q(t,r,a),[Q])});import{useCallback as U}from"react";var d=(t,e)=>t.getQueryData(e),v=t=>({get:U(r=>d(t,r),[d])});import{useCallback as C}from"react";import{useQuery as M,useQueryClient as P}from"@tanstack/react-query";var D=(t,e,r,a)=>{let o=r||P(),{data:i,isFetching:s,isFetched:y,isError:n,isSuccess:u,status:k,error:K}=M(t,e,a),g=C(()=>{l(o,t)},[l,r]);return{data:i,isFetching:s,isFetched:y,isError:n,isSuccess:u,status:k,error:K,cleanUp:g}},S=t=>({use:C((r,a,o)=>D(r,a,t,o),[D,t])});import{useCallback as H}from"react";var T=(t,e)=>t.invalidateQueries(e),x=t=>({invalidate:H(r=>T(t,r),[T])});var te=t=>{let e=t||R(),{remove:r,removeAll:a}=p(e),{set:o}=f(e),{get:i}=v(e),{invalidate:s}=x(e),{use:y}=S(e);return{__client__:e,get:i,set:o,invalidate:s,remove:r,removeAll:a,use:y}};import{useCallback as b}from"react";import{useMutation as E}from"@tanstack/react-query";var ne=(t,e)=>{let{mutateAsync:r,isError:a,isSuccess:o,isLoading:i,status:s}=E(n=>t(n)),y=b(async n=>{try{e?.onBefore&&await e.onBefore(n);let u=await r(n);return e?.onSuccess&&await e.onSuccess(n,u),u}catch(u){throw e?.onError&&e.onError(u),u}finally{e?.onFinally&&e.onFinally()}},[e]);return{mutateAsync:r,routine:y,isError:a,isSuccess:o,isLoading:i,status:s}};export{ne as useMutationManager,te as useStateManager};
